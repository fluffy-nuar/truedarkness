
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package exp.fluffynuar.truedarkness.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import exp.fluffynuar.truedarkness.block.WoodenMugBlock;
import exp.fluffynuar.truedarkness.block.WasterFlowerBlock;
import exp.fluffynuar.truedarkness.block.WastelandSheafStairsBlock;
import exp.fluffynuar.truedarkness.block.WastelandSheafSlabBlock;
import exp.fluffynuar.truedarkness.block.WastelandSheafFenceBlock;
import exp.fluffynuar.truedarkness.block.WastelandSheafBlock;
import exp.fluffynuar.truedarkness.block.WastelandBushBlock;
import exp.fluffynuar.truedarkness.block.UnclearSandOfMissingBlock;
import exp.fluffynuar.truedarkness.block.UnclearRenteriaSandBlock;
import exp.fluffynuar.truedarkness.block.TrudniteOreBlock;
import exp.fluffynuar.truedarkness.block.TrudniteBlockBlock;
import exp.fluffynuar.truedarkness.block.TrapSandOfMissingBlock;
import exp.fluffynuar.truedarkness.block.TallLavenderBlock;
import exp.fluffynuar.truedarkness.block.TableclothBlock;
import exp.fluffynuar.truedarkness.block.SwampTerracotaBlock;
import exp.fluffynuar.truedarkness.block.SwampTallGrassBlock;
import exp.fluffynuar.truedarkness.block.SwampSunflowerBlock;
import exp.fluffynuar.truedarkness.block.SwampStoneWallBlock;
import exp.fluffynuar.truedarkness.block.SwampStoneStairsBlock;
import exp.fluffynuar.truedarkness.block.SwampStoneSlabBlock;
import exp.fluffynuar.truedarkness.block.SwampStoneBlock;
import exp.fluffynuar.truedarkness.block.SwampSoilBlock;
import exp.fluffynuar.truedarkness.block.SwampSlimyOreBlock;
import exp.fluffynuar.truedarkness.block.SwampSeaweedBlock;
import exp.fluffynuar.truedarkness.block.SwampSandLayerBlock;
import exp.fluffynuar.truedarkness.block.SwampSandLayer2Block;
import exp.fluffynuar.truedarkness.block.SwampSandLayer1Block;
import exp.fluffynuar.truedarkness.block.SwampSandBlock;
import exp.fluffynuar.truedarkness.block.SwampMudBlock;
import exp.fluffynuar.truedarkness.block.SwampLilyBlock;
import exp.fluffynuar.truedarkness.block.SwampKelpTopBlock;
import exp.fluffynuar.truedarkness.block.SwampKelpBlock;
import exp.fluffynuar.truedarkness.block.SwampGrassBlock;
import exp.fluffynuar.truedarkness.block.SwampDirtBlock;
import exp.fluffynuar.truedarkness.block.SwampDeadGrassBlock;
import exp.fluffynuar.truedarkness.block.SwampCobblestoneWallBlock;
import exp.fluffynuar.truedarkness.block.SwampCobblestoneStairsBlock;
import exp.fluffynuar.truedarkness.block.SwampCobblestoneSlabBlock;
import exp.fluffynuar.truedarkness.block.SwampCobblestoneBlock;
import exp.fluffynuar.truedarkness.block.SwampClayBlock;
import exp.fluffynuar.truedarkness.block.SwampChamomileBlock;
import exp.fluffynuar.truedarkness.block.SwampCattailBlock;
import exp.fluffynuar.truedarkness.block.SwampBushBlock;
import exp.fluffynuar.truedarkness.block.SwampBricksWallBlock;
import exp.fluffynuar.truedarkness.block.SwampBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.SwampBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.SwampBricksBlock;
import exp.fluffynuar.truedarkness.block.SwampBlacksoilCoverBlock;
import exp.fluffynuar.truedarkness.block.SwampBlackSoilBlock;
import exp.fluffynuar.truedarkness.block.SuspiciousRenteriaSandBlock;
import exp.fluffynuar.truedarkness.block.StrippedMyceliumLogBlock;
import exp.fluffynuar.truedarkness.block.StrippedMyceliumLog1Block;
import exp.fluffynuar.truedarkness.block.StrippedFakeWoodBlock;
import exp.fluffynuar.truedarkness.block.StrippedFakeLogBlock;
import exp.fluffynuar.truedarkness.block.StrippedDarknessSpruceLogBlock;
import exp.fluffynuar.truedarkness.block.StrippedDarknessSpruceBlock;
import exp.fluffynuar.truedarkness.block.StrippedCyanWoodBlock;
import exp.fluffynuar.truedarkness.block.StrippedCyanLogBlock;
import exp.fluffynuar.truedarkness.block.SporeVineBlock;
import exp.fluffynuar.truedarkness.block.SporeVine2Block;
import exp.fluffynuar.truedarkness.block.SporeVine1Block;
import exp.fluffynuar.truedarkness.block.SporeVine0Block;
import exp.fluffynuar.truedarkness.block.SoulstealGridBlock;
import exp.fluffynuar.truedarkness.block.SoulstealBlockBlock;
import exp.fluffynuar.truedarkness.block.SoulMasterBlock;
import exp.fluffynuar.truedarkness.block.SoulAnchorBlock;
import exp.fluffynuar.truedarkness.block.ShiseledSwampBricksBlock;
import exp.fluffynuar.truedarkness.block.ShaddyMelonBlock;
import exp.fluffynuar.truedarkness.block.SculkGrailBlock;
import exp.fluffynuar.truedarkness.block.SandstoneOfMissingWallBlock;
import exp.fluffynuar.truedarkness.block.SandstoneOfMissingStairsBlock;
import exp.fluffynuar.truedarkness.block.SandstoneOfMissingSlabBlock;
import exp.fluffynuar.truedarkness.block.SandstoneOfMissingBlock;
import exp.fluffynuar.truedarkness.block.SandOfMissingLayerBlock;
import exp.fluffynuar.truedarkness.block.SandOfMissingLayer2Block;
import exp.fluffynuar.truedarkness.block.SandOfMissingLayer1Block;
import exp.fluffynuar.truedarkness.block.SandOfMissingBlock;
import exp.fluffynuar.truedarkness.block.SamovarBlock;
import exp.fluffynuar.truedarkness.block.SamovarActiveBlock;
import exp.fluffynuar.truedarkness.block.RunedSwampStoneBlock;
import exp.fluffynuar.truedarkness.block.RenteriaSandBlock;
import exp.fluffynuar.truedarkness.block.RecraGrassBlock;
import exp.fluffynuar.truedarkness.block.RecraFlowerBlock;
import exp.fluffynuar.truedarkness.block.RecraFlower2Block;
import exp.fluffynuar.truedarkness.block.RecraFlower1Block;
import exp.fluffynuar.truedarkness.block.ProectorBlock;
import exp.fluffynuar.truedarkness.block.PrismarinumCoralWaveBlock;
import exp.fluffynuar.truedarkness.block.PrismarinumCoralRichBlock;
import exp.fluffynuar.truedarkness.block.PrismarinumCoralFlashingBlock;
import exp.fluffynuar.truedarkness.block.PrismarinumCoralDarknessBlock;
import exp.fluffynuar.truedarkness.block.PrismarinumCoralColourlessBlock;
import exp.fluffynuar.truedarkness.block.PrismarineCoralWaveBlock;
import exp.fluffynuar.truedarkness.block.PrismarineCoralRichBlock;
import exp.fluffynuar.truedarkness.block.PrismarineCoralFlashingBlock;
import exp.fluffynuar.truedarkness.block.PrismarineCoralDarknessBlock;
import exp.fluffynuar.truedarkness.block.PrismarineCoralColourlessBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneBricksWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneBricksBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampStoneBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampCobblestoneWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampCobblestoneStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampCobblestoneSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedSwampCobblestoneBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingStairs1Block;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingSlab1Block;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneOfMissingBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneBricksOfMissingWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneBricksOfMissingStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneBricksOfMissingSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneBricksOfMissingPillarBlock;
import exp.fluffynuar.truedarkness.block.PolishedSandstoneBricksOfMissingBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneBricksWallBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneBricksBlock;
import exp.fluffynuar.truedarkness.block.PolishedAccustoneBlock;
import exp.fluffynuar.truedarkness.block.MyceliumWoodBlock;
import exp.fluffynuar.truedarkness.block.MyceliumTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.MyceliumStairsBlock;
import exp.fluffynuar.truedarkness.block.MyceliumSlabBlock;
import exp.fluffynuar.truedarkness.block.MyceliumRootsBlock;
import exp.fluffynuar.truedarkness.block.MyceliumPressurePlateBlock;
import exp.fluffynuar.truedarkness.block.MyceliumPlanksBlock;
import exp.fluffynuar.truedarkness.block.MyceliumLogBlock;
import exp.fluffynuar.truedarkness.block.MyceliumGrassBlock;
import exp.fluffynuar.truedarkness.block.MyceliumFenceGateBlock;
import exp.fluffynuar.truedarkness.block.MyceliumFenceBlock;
import exp.fluffynuar.truedarkness.block.MyceliumDoorBlock;
import exp.fluffynuar.truedarkness.block.MyceliumButtonBlock;
import exp.fluffynuar.truedarkness.block.MossySwampBricksBlock;
import exp.fluffynuar.truedarkness.block.MossyPolishedSwampStoneBricksBlock;
import exp.fluffynuar.truedarkness.block.MossyPolishedAccustoneBricksBlock;
import exp.fluffynuar.truedarkness.block.MossyDarknessSprucePlanksBlock;
import exp.fluffynuar.truedarkness.block.MinersPotBlock;
import exp.fluffynuar.truedarkness.block.MeteniteGlassPaneBlock;
import exp.fluffynuar.truedarkness.block.MeteniteGlassBlock;
import exp.fluffynuar.truedarkness.block.MeteniteClusterBlock;
import exp.fluffynuar.truedarkness.block.MeteniteBlockBlock;
import exp.fluffynuar.truedarkness.block.MeteniteBlock;
import exp.fluffynuar.truedarkness.block.LightedVineBlock;
import exp.fluffynuar.truedarkness.block.LightedVineActiveBlock;
import exp.fluffynuar.truedarkness.block.LightedVine2Block;
import exp.fluffynuar.truedarkness.block.LightedShroom1Block;
import exp.fluffynuar.truedarkness.block.LightShroomBlock;
import exp.fluffynuar.truedarkness.block.LightShroom3Block;
import exp.fluffynuar.truedarkness.block.LightShroom2Block;
import exp.fluffynuar.truedarkness.block.LightOfSoulBlock;
import exp.fluffynuar.truedarkness.block.LightMushroomsDisableBlock;
import exp.fluffynuar.truedarkness.block.LightMushroomsActiveBlock;
import exp.fluffynuar.truedarkness.block.LightMushroomTopBlock;
import exp.fluffynuar.truedarkness.block.LightMushroomTop1Block;
import exp.fluffynuar.truedarkness.block.LightMushroomTallBlock;
import exp.fluffynuar.truedarkness.block.LightFungusBlockBlock;
import exp.fluffynuar.truedarkness.block.LavenderBlock;
import exp.fluffynuar.truedarkness.block.LavenderAzaleaLeavesBlock;
import exp.fluffynuar.truedarkness.block.LapisLazuliSwampOreBlock;
import exp.fluffynuar.truedarkness.block.KettleForSamoverBlock;
import exp.fluffynuar.truedarkness.block.KettleBlock;
import exp.fluffynuar.truedarkness.block.InksBlock;
import exp.fluffynuar.truedarkness.block.GrapeAzaleaLeavesBlock;
import exp.fluffynuar.truedarkness.block.GramiteOreBlock;
import exp.fluffynuar.truedarkness.block.GramiteBlockBlock;
import exp.fluffynuar.truedarkness.block.GlowniteTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.GlowniteStairsBlock;
import exp.fluffynuar.truedarkness.block.GlowniteSlabBlock;
import exp.fluffynuar.truedarkness.block.GlowniteGridPaneBlock;
import exp.fluffynuar.truedarkness.block.GlowniteGridLanternBlock;
import exp.fluffynuar.truedarkness.block.GlowniteGridBlock;
import exp.fluffynuar.truedarkness.block.GlowniteDoorBlock;
import exp.fluffynuar.truedarkness.block.GlowniteBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.GlowniteBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.GlowniteBricksBlock;
import exp.fluffynuar.truedarkness.block.GlowniteBlockBlock;
import exp.fluffynuar.truedarkness.block.GlowWoodBlock;
import exp.fluffynuar.truedarkness.block.GlowTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.GlowStairsBlock;
import exp.fluffynuar.truedarkness.block.GlowSlabBlock;
import exp.fluffynuar.truedarkness.block.GlowPressurePlateBlock;
import exp.fluffynuar.truedarkness.block.GlowPlanksBlock;
import exp.fluffynuar.truedarkness.block.GlowLogBlock;
import exp.fluffynuar.truedarkness.block.GlowFungusHatBlock;
import exp.fluffynuar.truedarkness.block.GlowFenceGateBlock;
import exp.fluffynuar.truedarkness.block.GlowFenceBlock;
import exp.fluffynuar.truedarkness.block.GlowDoorBlock;
import exp.fluffynuar.truedarkness.block.GlowButtonBlock;
import exp.fluffynuar.truedarkness.block.GlassJarBlock;
import exp.fluffynuar.truedarkness.block.FireniteBlockBlock;
import exp.fluffynuar.truedarkness.block.FirefliesOakLogBlock;
import exp.fluffynuar.truedarkness.block.FirefliesLightBlock;
import exp.fluffynuar.truedarkness.block.FirefliesFlowerBlock;
import exp.fluffynuar.truedarkness.block.FakeWoodBlock;
import exp.fluffynuar.truedarkness.block.FakeTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.FakeStairsBlock;
import exp.fluffynuar.truedarkness.block.FakeSlabBlock;
import exp.fluffynuar.truedarkness.block.FakePressurePlateBlock;
import exp.fluffynuar.truedarkness.block.FakePlanksBlock;
import exp.fluffynuar.truedarkness.block.FakeLogBlock;
import exp.fluffynuar.truedarkness.block.FakeLeavesBlock;
import exp.fluffynuar.truedarkness.block.FakeFenceGateBlock;
import exp.fluffynuar.truedarkness.block.FakeFenceBlock;
import exp.fluffynuar.truedarkness.block.FakeDoorBlock;
import exp.fluffynuar.truedarkness.block.FakeButtonBlock;
import exp.fluffynuar.truedarkness.block.EridiumGlassPaneBlock;
import exp.fluffynuar.truedarkness.block.EridiumGlassBlock;
import exp.fluffynuar.truedarkness.block.EridiumClasterBlock;
import exp.fluffynuar.truedarkness.block.EridiumBlockBlock;
import exp.fluffynuar.truedarkness.block.EridiumBlock;
import exp.fluffynuar.truedarkness.block.EmptyFirefliesOakLogBlock;
import exp.fluffynuar.truedarkness.block.EmptyChiseledGlassPaneBlock;
import exp.fluffynuar.truedarkness.block.EmptyChiseledGlassBlock;
import exp.fluffynuar.truedarkness.block.EmptyChiseledAncientGlassPaneBlock;
import exp.fluffynuar.truedarkness.block.EmptyChiseledAncientGlassBlock;
import exp.fluffynuar.truedarkness.block.DustClayWallBlock;
import exp.fluffynuar.truedarkness.block.DustClayStairsBlock;
import exp.fluffynuar.truedarkness.block.DustClaySlabBlock;
import exp.fluffynuar.truedarkness.block.DustClayBricksWallBlock;
import exp.fluffynuar.truedarkness.block.DustClayBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.DustClayBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.DustClayBricksBlock;
import exp.fluffynuar.truedarkness.block.DustClayBlock;
import exp.fluffynuar.truedarkness.block.DustBlockBlock;
import exp.fluffynuar.truedarkness.block.DriedWoodBlock;
import exp.fluffynuar.truedarkness.block.DriedSwampBushBlock;
import exp.fluffynuar.truedarkness.block.DriedStairsBlock;
import exp.fluffynuar.truedarkness.block.DriedSlabBlock;
import exp.fluffynuar.truedarkness.block.DriedPressurePlateBlock;
import exp.fluffynuar.truedarkness.block.DriedPlanksBlock;
import exp.fluffynuar.truedarkness.block.DriedLogBlock;
import exp.fluffynuar.truedarkness.block.DriedFenceGateBlock;
import exp.fluffynuar.truedarkness.block.DriedFenceBlock;
import exp.fluffynuar.truedarkness.block.DriedButtonBlock;
import exp.fluffynuar.truedarkness.block.DeadPrismarineCoralWaveBlock;
import exp.fluffynuar.truedarkness.block.DeadPrismarineCoralRichBlock;
import exp.fluffynuar.truedarkness.block.DeadPrismarineCoralFlashingBlock;
import exp.fluffynuar.truedarkness.block.DeadPrismarineCoralDarknessBlock;
import exp.fluffynuar.truedarkness.block.DeadPrismarineCoralColourlessBlock;
import exp.fluffynuar.truedarkness.block.DeadBushSwampBlock;
import exp.fluffynuar.truedarkness.block.DarkniteWallBlock;
import exp.fluffynuar.truedarkness.block.DarkniteStairsBlock;
import exp.fluffynuar.truedarkness.block.DarkniteSlabBlock;
import exp.fluffynuar.truedarkness.block.DarkniteBricksWallBlock;
import exp.fluffynuar.truedarkness.block.DarkniteBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.DarkniteBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.DarkniteBricksBlock;
import exp.fluffynuar.truedarkness.block.DarkniteBlock;
import exp.fluffynuar.truedarkness.block.DarknessStainedPaneBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceWoodBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceStairsBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceSlabBlock;
import exp.fluffynuar.truedarkness.block.DarknessSprucePressurePlateBlock;
import exp.fluffynuar.truedarkness.block.DarknessSprucePlanksBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceLogBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceLeavesBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceFenceGateBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceFenceBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceDoorBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceChestBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceButtonBlock;
import exp.fluffynuar.truedarkness.block.DarknessSpruceBoxBlock;
import exp.fluffynuar.truedarkness.block.DarknessGlassBlock;
import exp.fluffynuar.truedarkness.block.DarkCrystalBlockBlock;
import exp.fluffynuar.truedarkness.block.CyanWoodBlock;
import exp.fluffynuar.truedarkness.block.CyanTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.CyanStairsBlock;
import exp.fluffynuar.truedarkness.block.CyanSlabBlock;
import exp.fluffynuar.truedarkness.block.CyanPressurePlateBlock;
import exp.fluffynuar.truedarkness.block.CyanPlanksBlock;
import exp.fluffynuar.truedarkness.block.CyanLogBlock;
import exp.fluffynuar.truedarkness.block.CyanLeavesBlock;
import exp.fluffynuar.truedarkness.block.CyanFenceGateBlock;
import exp.fluffynuar.truedarkness.block.CyanFenceBlock;
import exp.fluffynuar.truedarkness.block.CyanDoorBlock;
import exp.fluffynuar.truedarkness.block.CyanButtonBlock;
import exp.fluffynuar.truedarkness.block.CyanBookshelfBlock;
import exp.fluffynuar.truedarkness.block.CvetaliyOreBlock;
import exp.fluffynuar.truedarkness.block.CvetaliyClusterBlock;
import exp.fluffynuar.truedarkness.block.CvetaliyBlockBlock;
import exp.fluffynuar.truedarkness.block.CryingTrapDoorBlock;
import exp.fluffynuar.truedarkness.block.CryingStairsBlock;
import exp.fluffynuar.truedarkness.block.CryingSlabBlock;
import exp.fluffynuar.truedarkness.block.CryingPressurePlateBlock;
import exp.fluffynuar.truedarkness.block.CryingPlanksBlock;
import exp.fluffynuar.truedarkness.block.CryingFenceGateBlock;
import exp.fluffynuar.truedarkness.block.CryingFenceBlock;
import exp.fluffynuar.truedarkness.block.CryingDoorBlock;
import exp.fluffynuar.truedarkness.block.CryingButtonBlock;
import exp.fluffynuar.truedarkness.block.CryBlockBlock;
import exp.fluffynuar.truedarkness.block.CrenritBlock;
import exp.fluffynuar.truedarkness.block.CrackedSwampBricksBlock;
import exp.fluffynuar.truedarkness.block.CrackedSandstoneBricksOfMissingBlock;
import exp.fluffynuar.truedarkness.block.CrackedPolishedSwampStoneBricksBlock;
import exp.fluffynuar.truedarkness.block.CrackedPolishedAccustoneBricksBlock;
import exp.fluffynuar.truedarkness.block.CrackedDarkniteBricksBlock;
import exp.fluffynuar.truedarkness.block.CrackedAccuswampMosaicWallBlock;
import exp.fluffynuar.truedarkness.block.CrackedAccuswampMosaicStairsBlock;
import exp.fluffynuar.truedarkness.block.CrackedAccuswampMosaicSlabBlock;
import exp.fluffynuar.truedarkness.block.CrackedAccuswampMosaicBlock;
import exp.fluffynuar.truedarkness.block.CorruptedSunflowerBlock;
import exp.fluffynuar.truedarkness.block.CorruptedSlimeBlock;
import exp.fluffynuar.truedarkness.block.CorruptedSkulkCatalystBlock;
import exp.fluffynuar.truedarkness.block.CorruptedSculkCatalystBlock;
import exp.fluffynuar.truedarkness.block.CorruptedSculkBlock;
import exp.fluffynuar.truedarkness.block.CorruptedRuneBlock;
import exp.fluffynuar.truedarkness.block.CorruptedRootsBlock;
import exp.fluffynuar.truedarkness.block.CorruptedLeavesBlock;
import exp.fluffynuar.truedarkness.block.CorruptedHumanBlockBlock;
import exp.fluffynuar.truedarkness.block.CorruptedGrassBlock;
import exp.fluffynuar.truedarkness.block.CorruptedFlowerBlock;
import exp.fluffynuar.truedarkness.block.CorruptedBubbleEmptyBlock;
import exp.fluffynuar.truedarkness.block.CorruptedBubbleBlockBlock;
import exp.fluffynuar.truedarkness.block.CorruptedBubbleBlock;
import exp.fluffynuar.truedarkness.block.CorruptRuneBlock;
import exp.fluffynuar.truedarkness.block.CorruptRune2Block;
import exp.fluffynuar.truedarkness.block.CorruptRune1Block;
import exp.fluffynuar.truedarkness.block.CorruptBlock;
import exp.fluffynuar.truedarkness.block.Corrupt1Block;
import exp.fluffynuar.truedarkness.block.Corrupt0Block;
import exp.fluffynuar.truedarkness.block.CopperKettleForSamovarBlock;
import exp.fluffynuar.truedarkness.block.CopperKettleBlock;
import exp.fluffynuar.truedarkness.block.CobbledDarkniteWallBlock;
import exp.fluffynuar.truedarkness.block.CobbledDarkniteStairsBlock;
import exp.fluffynuar.truedarkness.block.CobbledDarkniteSlabBlock;
import exp.fluffynuar.truedarkness.block.CobbledDarkniteBlock;
import exp.fluffynuar.truedarkness.block.ClayJugBlock;
import exp.fluffynuar.truedarkness.block.ClayJug5Block;
import exp.fluffynuar.truedarkness.block.ClayJug4Block;
import exp.fluffynuar.truedarkness.block.ClayJug3Block;
import exp.fluffynuar.truedarkness.block.ClayJug2Block;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedSwampStoneBricksBlock;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedSandstoneOfMissingBlock;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedSandstoneOfMissing2Block;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedSandstoneOfMissing1Block;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedSandstoneBricksOfMissingBlock;
import exp.fluffynuar.truedarkness.block.ChiseledPolishedAccustoneBricksBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlowniteStairsBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlowniteSlabBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlowniteBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlassPaneBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlassPane4Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlassPane3Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlassPane2Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlassPane1Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlassBlock;
import exp.fluffynuar.truedarkness.block.ChiseledGlass4Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlass3Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlass2Block;
import exp.fluffynuar.truedarkness.block.ChiseledGlass1Block;
import exp.fluffynuar.truedarkness.block.ChiseledDarkniteBricksBlock;
import exp.fluffynuar.truedarkness.block.BushyGrapeAzaleaLeavesBlock;
import exp.fluffynuar.truedarkness.block.BushedPolishedSandstoneBricksOfMissingBlock;
import exp.fluffynuar.truedarkness.block.BubbleBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingPlusBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingMinusBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingLavenderPetalBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingGlowBerryJamBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingEqualsBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingCocoaBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingBlock;
import exp.fluffynuar.truedarkness.block.BlockOfWritingBagBlock;
import exp.fluffynuar.truedarkness.block.BlacksmiteForgeBlock;
import exp.fluffynuar.truedarkness.block.BigGlowniteBricksStairsBlock;
import exp.fluffynuar.truedarkness.block.BigGlowniteBricksSlabBlock;
import exp.fluffynuar.truedarkness.block.BigGlowniteBricksBlock;
import exp.fluffynuar.truedarkness.block.BigBookBlock;
import exp.fluffynuar.truedarkness.block.BagBlock;
import exp.fluffynuar.truedarkness.block.AncientSculkBlock;
import exp.fluffynuar.truedarkness.block.AccuswampMosaicWallBlock;
import exp.fluffynuar.truedarkness.block.AccuswampMosaicStairsBlock;
import exp.fluffynuar.truedarkness.block.AccuswampMosaicSlabBlock;
import exp.fluffynuar.truedarkness.block.AccuswampMosaicBlock;
import exp.fluffynuar.truedarkness.TruedarknessMod;

public class TruedarknessModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, TruedarknessMod.MODID);
	public static final RegistryObject<Block> DARKNESS_SPRUCE_WOOD = REGISTRY.register("darkness_spruce_wood", () -> new DarknessSpruceWoodBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_LOG = REGISTRY.register("darkness_spruce_log", () -> new DarknessSpruceLogBlock());
	public static final RegistryObject<Block> STRIPPED_DARKNESS_SPRUCE = REGISTRY.register("stripped_darkness_spruce", () -> new StrippedDarknessSpruceBlock());
	public static final RegistryObject<Block> STRIPPED_DARKNESS_SPRUCE_LOG = REGISTRY.register("stripped_darkness_spruce_log", () -> new StrippedDarknessSpruceLogBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_BOX = REGISTRY.register("darkness_spruce_box", () -> new DarknessSpruceBoxBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_PLANKS = REGISTRY.register("darkness_spruce_planks", () -> new DarknessSprucePlanksBlock());
	public static final RegistryObject<Block> MOSSY_DARKNESS_SPRUCE_PLANKS = REGISTRY.register("mossy_darkness_spruce_planks", () -> new MossyDarknessSprucePlanksBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_LEAVES = REGISTRY.register("darkness_spruce_leaves", () -> new DarknessSpruceLeavesBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_STAIRS = REGISTRY.register("darkness_spruce_stairs", () -> new DarknessSpruceStairsBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_SLAB = REGISTRY.register("darkness_spruce_slab", () -> new DarknessSpruceSlabBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_FENCE = REGISTRY.register("darkness_spruce_fence", () -> new DarknessSpruceFenceBlock());
	public static final RegistryObject<Block> CYAN = REGISTRY.register("cyan", () -> new CyanWoodBlock());
	public static final RegistryObject<Block> CYAN_STEM = REGISTRY.register("cyan_stem", () -> new CyanLogBlock());
	public static final RegistryObject<Block> STRIPPED_CYAN_WOOD = REGISTRY.register("stripped_cyan_wood", () -> new StrippedCyanWoodBlock());
	public static final RegistryObject<Block> STRIPPED_CYAN_LOG = REGISTRY.register("stripped_cyan_log", () -> new StrippedCyanLogBlock());
	public static final RegistryObject<Block> CYAN_PLANKS = REGISTRY.register("cyan_planks", () -> new CyanPlanksBlock());
	public static final RegistryObject<Block> CYAN_PETAL = REGISTRY.register("cyan_petal", () -> new CyanLeavesBlock());
	public static final RegistryObject<Block> CYAN_BOOKSHELF = REGISTRY.register("cyan_bookshelf", () -> new CyanBookshelfBlock());
	public static final RegistryObject<Block> CYAN_STAIRS = REGISTRY.register("cyan_stairs", () -> new CyanStairsBlock());
	public static final RegistryObject<Block> CYAN_SLAB = REGISTRY.register("cyan_slab", () -> new CyanSlabBlock());
	public static final RegistryObject<Block> CYAN_FENCE = REGISTRY.register("cyan_fence", () -> new CyanFenceBlock());
	public static final RegistryObject<Block> FAKE_WOOD = REGISTRY.register("fake_wood", () -> new FakeWoodBlock());
	public static final RegistryObject<Block> FAKE_LOG = REGISTRY.register("fake_log", () -> new FakeLogBlock());
	public static final RegistryObject<Block> STRIPPED_FAKE_WOOD = REGISTRY.register("stripped_fake_wood", () -> new StrippedFakeWoodBlock());
	public static final RegistryObject<Block> STRIPPED_FAKE_LOG = REGISTRY.register("stripped_fake_log", () -> new StrippedFakeLogBlock());
	public static final RegistryObject<Block> FAKE_PLANKS = REGISTRY.register("fake_planks", () -> new FakePlanksBlock());
	public static final RegistryObject<Block> FAKE_LEAVES = REGISTRY.register("fake_leaves", () -> new FakeLeavesBlock());
	public static final RegistryObject<Block> FAKE_STAIRS = REGISTRY.register("fake_stairs", () -> new FakeStairsBlock());
	public static final RegistryObject<Block> FAKE_SLAB = REGISTRY.register("fake_slab", () -> new FakeSlabBlock());
	public static final RegistryObject<Block> FAKE_FENCE = REGISTRY.register("fake_fence", () -> new FakeFenceBlock());
	public static final RegistryObject<Block> MYCELIUM_WOOD = REGISTRY.register("mycelium_wood", () -> new MyceliumWoodBlock());
	public static final RegistryObject<Block> MYCELIUM_LOG = REGISTRY.register("mycelium_log", () -> new MyceliumLogBlock());
	public static final RegistryObject<Block> STRIPPED_MYCELIUM_WOOD = REGISTRY.register("stripped_mycelium_wood", () -> new StrippedMyceliumLogBlock());
	public static final RegistryObject<Block> STRIPPED_MYCELIUM_LOG = REGISTRY.register("stripped_mycelium_log", () -> new StrippedMyceliumLog1Block());
	public static final RegistryObject<Block> MYCELIUM_PLANKS = REGISTRY.register("mycelium_planks", () -> new MyceliumPlanksBlock());
	public static final RegistryObject<Block> MYCELIUM_STAIRS = REGISTRY.register("mycelium_stairs", () -> new MyceliumStairsBlock());
	public static final RegistryObject<Block> MYCELIUM_SLAB = REGISTRY.register("mycelium_slab", () -> new MyceliumSlabBlock());
	public static final RegistryObject<Block> MYCELIUM_FENCE = REGISTRY.register("mycelium_fence", () -> new MyceliumFenceBlock());
	public static final RegistryObject<Block> GLOW_WOOD = REGISTRY.register("glow_wood", () -> new GlowWoodBlock());
	public static final RegistryObject<Block> GLOW_LOG = REGISTRY.register("glow_log", () -> new GlowLogBlock());
	public static final RegistryObject<Block> GLOW_PLANKS = REGISTRY.register("glow_planks", () -> new GlowPlanksBlock());
	public static final RegistryObject<Block> GLOW_FUNGUS_WART = REGISTRY.register("glow_fungus_wart", () -> new LightFungusBlockBlock());
	public static final RegistryObject<Block> GLOW_STAIRS = REGISTRY.register("glow_stairs", () -> new GlowStairsBlock());
	public static final RegistryObject<Block> GLOW_SLAB = REGISTRY.register("glow_slab", () -> new GlowSlabBlock());
	public static final RegistryObject<Block> GLOW_FENCE = REGISTRY.register("glow_fence", () -> new GlowFenceBlock());
	public static final RegistryObject<Block> CRYING_PLANKS = REGISTRY.register("crying_planks", () -> new CryingPlanksBlock());
	public static final RegistryObject<Block> CRYING_STAIRS = REGISTRY.register("crying_stairs", () -> new CryingStairsBlock());
	public static final RegistryObject<Block> CRYING_SLAB = REGISTRY.register("crying_slab", () -> new CryingSlabBlock());
	public static final RegistryObject<Block> CRYING_FENCE = REGISTRY.register("crying_fence", () -> new CryingFenceBlock());
	public static final RegistryObject<Block> DRIED_WOOD = REGISTRY.register("dried_wood", () -> new DriedWoodBlock());
	public static final RegistryObject<Block> DRIED_LOG = REGISTRY.register("dried_log", () -> new DriedLogBlock());
	public static final RegistryObject<Block> DRIED_PLANKS = REGISTRY.register("dried_planks", () -> new DriedPlanksBlock());
	public static final RegistryObject<Block> DRIED_STAIRS = REGISTRY.register("dried_stairs", () -> new DriedStairsBlock());
	public static final RegistryObject<Block> DRIED_SLAB = REGISTRY.register("dried_slab", () -> new DriedSlabBlock());
	public static final RegistryObject<Block> DRIED_FENCE = REGISTRY.register("dried_fence", () -> new DriedFenceBlock());
	public static final RegistryObject<Block> SWAMP_COBBLESTONE = REGISTRY.register("swamp_cobblestone", () -> new SwampCobblestoneBlock());
	public static final RegistryObject<Block> SWAMP_COBBLESTONE_STAIRS = REGISTRY.register("swamp_cobblestone_stairs", () -> new SwampCobblestoneStairsBlock());
	public static final RegistryObject<Block> SWAMP_COBBLESTONE_SLAB = REGISTRY.register("swamp_cobblestone_slab", () -> new SwampCobblestoneSlabBlock());
	public static final RegistryObject<Block> SWAMP_COBBLESTONE_WALL = REGISTRY.register("swamp_cobblestone_wall", () -> new SwampCobblestoneWallBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_COBBLESTONE = REGISTRY.register("polished_swamp_cobblestone", () -> new PolishedSwampCobblestoneBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_COBBLESTONE_STAIRS = REGISTRY.register("polished_swamp_cobblestone_stairs", () -> new PolishedSwampCobblestoneStairsBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_COBBLESTONE_SLAB = REGISTRY.register("polished_swamp_cobblestone_slab", () -> new PolishedSwampCobblestoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_COBBLESTONE_WALL = REGISTRY.register("polished_swamp_cobblestone_wall", () -> new PolishedSwampCobblestoneWallBlock());
	public static final RegistryObject<Block> SWAMP_BRICKS = REGISTRY.register("swamp_bricks", () -> new SwampBricksBlock());
	public static final RegistryObject<Block> CHISELED_SWAMP_BRICKS = REGISTRY.register("chiseled_swamp_bricks", () -> new ShiseledSwampBricksBlock());
	public static final RegistryObject<Block> MOSSY_SWAMP_BRICKS = REGISTRY.register("mossy_swamp_bricks", () -> new MossySwampBricksBlock());
	public static final RegistryObject<Block> CRACKED_SWAMP_BRICKS = REGISTRY.register("cracked_swamp_bricks", () -> new CrackedSwampBricksBlock());
	public static final RegistryObject<Block> SWAMP_BRICKS_STAIRS = REGISTRY.register("swamp_bricks_stairs", () -> new SwampBricksStairsBlock());
	public static final RegistryObject<Block> SWAMP_BRICKS_SLAB = REGISTRY.register("swamp_bricks_slab", () -> new SwampBricksSlabBlock());
	public static final RegistryObject<Block> SWAMP_BRICKS_WALL = REGISTRY.register("swamp_bricks_wall", () -> new SwampBricksWallBlock());
	public static final RegistryObject<Block> SWAMP_STONE = REGISTRY.register("swamp_stone", () -> new SwampStoneBlock());
	public static final RegistryObject<Block> SWAMP_STONE_STAIRS = REGISTRY.register("swamp_stone_stairs", () -> new SwampStoneStairsBlock());
	public static final RegistryObject<Block> SWAMP_STONE_SLAB = REGISTRY.register("swamp_stone_slab", () -> new SwampStoneSlabBlock());
	public static final RegistryObject<Block> SWAMP_STONE_WALL = REGISTRY.register("swamp_stone_wall", () -> new SwampStoneWallBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE = REGISTRY.register("polished_swamp_stone", () -> new PolishedSwampStoneBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_STAIRS = REGISTRY.register("polished_swamp_stone_stairs", () -> new PolishedSwampStoneStairsBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_SLAB = REGISTRY.register("polished_swamp_stone_slab", () -> new PolishedSwampStoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_WALL = REGISTRY.register("polished_swamp_stone_wall", () -> new PolishedSwampStoneWallBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_BRICKS = REGISTRY.register("polished_swamp_stone_bricks", () -> new PolishedSwampStoneBricksBlock());
	public static final RegistryObject<Block> CHISELED_POLISHED_SWAMP_STONE_BRICKS = REGISTRY.register("chiseled_polished_swamp_stone_bricks", () -> new ChiseledPolishedSwampStoneBricksBlock());
	public static final RegistryObject<Block> CRACKED_POLISHED_SWAMP_STONE_BRICKS = REGISTRY.register("cracked_polished_swamp_stone_bricks", () -> new CrackedPolishedSwampStoneBricksBlock());
	public static final RegistryObject<Block> MOSSY_POLISHED_SWAMP_STONE_BRICKS = REGISTRY.register("mossy_polished_swamp_stone_bricks", () -> new MossyPolishedSwampStoneBricksBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_BRICKS_STAIRS = REGISTRY.register("polished_swamp_stone_bricks_stairs", () -> new PolishedSwampStoneBricksStairsBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_BRICKS_SLAB = REGISTRY.register("polished_swamp_stone_bricks_slab", () -> new PolishedSwampStoneBricksSlabBlock());
	public static final RegistryObject<Block> POLISHED_SWAMP_STONE_BRICKS_WALL = REGISTRY.register("polished_swamp_stone_bricks_wall", () -> new PolishedSwampStoneBricksWallBlock());
	public static final RegistryObject<Block> TRUDNITE_ORE = REGISTRY.register("trudnite_ore", () -> new TrudniteOreBlock());
	public static final RegistryObject<Block> LAPIS_LAZULI_SWAMP_ORE = REGISTRY.register("lapis_lazuli_swamp_ore", () -> new LapisLazuliSwampOreBlock());
	public static final RegistryObject<Block> SWAMP_SLIMY_ORE = REGISTRY.register("swamp_slimy_ore", () -> new SwampSlimyOreBlock());
	public static final RegistryObject<Block> CVETALIY_ORE = REGISTRY.register("cvetaliy_ore", () -> new CvetaliyOreBlock());
	public static final RegistryObject<Block> SWAMP_SAND = REGISTRY.register("swamp_sand", () -> new SwampSandBlock());
	public static final RegistryObject<Block> SWAMP_TERRACOTA = REGISTRY.register("swamp_terracota", () -> new SwampTerracotaBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE = REGISTRY.register("polished_accustone", () -> new PolishedAccustoneBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_STAIRS = REGISTRY.register("polished_accustone_stairs", () -> new PolishedAccustoneStairsBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_SLAB = REGISTRY.register("polished_accustone_slab", () -> new PolishedAccustoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_WALL = REGISTRY.register("polished_accustone_wall", () -> new PolishedAccustoneWallBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_BRICKS = REGISTRY.register("polished_accustone_bricks", () -> new PolishedAccustoneBricksBlock());
	public static final RegistryObject<Block> CRACKED_POLISHED_ACCUSTONE_BRICKS = REGISTRY.register("cracked_polished_accustone_bricks", () -> new CrackedPolishedAccustoneBricksBlock());
	public static final RegistryObject<Block> CHISELED_POLISHED_ACCUSTONE_BRICKS = REGISTRY.register("chiseled_polished_accustone_bricks", () -> new ChiseledPolishedAccustoneBricksBlock());
	public static final RegistryObject<Block> MOSSY_POLISHED_ACCUSTONE_BRICKS = REGISTRY.register("mossy_polished_accustone_bricks", () -> new MossyPolishedAccustoneBricksBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_BRICKS_STAIRS = REGISTRY.register("polished_accustone_bricks_stairs", () -> new PolishedAccustoneBricksStairsBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_BRICKS_SLAB = REGISTRY.register("polished_accustone_bricks_slab", () -> new PolishedAccustoneBricksSlabBlock());
	public static final RegistryObject<Block> POLISHED_ACCUSTONE_BRICKS_WALL = REGISTRY.register("polished_accustone_bricks_wall", () -> new PolishedAccustoneBricksWallBlock());
	public static final RegistryObject<Block> ACCUSWAMP_MOSAIC = REGISTRY.register("accuswamp_mosaic", () -> new AccuswampMosaicBlock());
	public static final RegistryObject<Block> CRACKED_ACCUSWAMP_MOSAIC = REGISTRY.register("cracked_accuswamp_mosaic", () -> new CrackedAccuswampMosaicBlock());
	public static final RegistryObject<Block> ACCUSWAMP_MOSAIC_STAIRS = REGISTRY.register("accuswamp_mosaic_stairs", () -> new AccuswampMosaicStairsBlock());
	public static final RegistryObject<Block> CRACKED_ACCUSWAMP_MOSAIC_STAIRS = REGISTRY.register("cracked_accuswamp_mosaic_stairs", () -> new CrackedAccuswampMosaicStairsBlock());
	public static final RegistryObject<Block> ACCUSWAMP_MOSAIC_SLAB = REGISTRY.register("accuswamp_mosaic_slab", () -> new AccuswampMosaicSlabBlock());
	public static final RegistryObject<Block> CRACKED_ACCUSWAMP_MOSAIC_SLAB = REGISTRY.register("cracked_accuswamp_mosaic_slab", () -> new CrackedAccuswampMosaicSlabBlock());
	public static final RegistryObject<Block> ACCUSWAMP_MOSAIC_WALL = REGISTRY.register("accuswamp_mosaic_wall", () -> new AccuswampMosaicWallBlock());
	public static final RegistryObject<Block> CRACKED_ACCUSWAMP_MOSAIC_WALL = REGISTRY.register("cracked_accuswamp_mosaic_wall", () -> new CrackedAccuswampMosaicWallBlock());
	public static final RegistryObject<Block> SWAMP_CLAY = REGISTRY.register("swamp_clay", () -> new SwampClayBlock());
	public static final RegistryObject<Block> SWAMP_MUD = REGISTRY.register("swamp_mud", () -> new SwampMudBlock());
	public static final RegistryObject<Block> DUST_BLOCK = REGISTRY.register("dust_block", () -> new DustBlockBlock());
	public static final RegistryObject<Block> DUST_CLAY = REGISTRY.register("dust_clay", () -> new DustClayBlock());
	public static final RegistryObject<Block> DUST_CLAY_STAIRS = REGISTRY.register("dust_clay_stairs", () -> new DustClayStairsBlock());
	public static final RegistryObject<Block> DUST_CLAY_SLAB = REGISTRY.register("dust_clay_slab", () -> new DustClaySlabBlock());
	public static final RegistryObject<Block> DUST_CLAY_WALL = REGISTRY.register("dust_clay_wall", () -> new DustClayWallBlock());
	public static final RegistryObject<Block> DUST_CLAY_BRICKS = REGISTRY.register("dust_clay_bricks", () -> new DustClayBricksBlock());
	public static final RegistryObject<Block> DUST_CLAY_BRICKS_STAIRS = REGISTRY.register("dust_clay_bricks_stairs", () -> new DustClayBricksStairsBlock());
	public static final RegistryObject<Block> DUST_CLAY_BRICKS_SLAB = REGISTRY.register("dust_clay_bricks_slab", () -> new DustClayBricksSlabBlock());
	public static final RegistryObject<Block> DUST_CLAY_BRICKS_WALL = REGISTRY.register("dust_clay_bricks_wall", () -> new DustClayBricksWallBlock());
	public static final RegistryObject<Block> SAND_OF_MISSING = REGISTRY.register("sand_of_missing", () -> new SandOfMissingBlock());
	public static final RegistryObject<Block> SANDSTONE_OF_MISSING = REGISTRY.register("sandstone_of_missing", () -> new SandstoneOfMissingBlock());
	public static final RegistryObject<Block> SANDSTONE_OF_MISSING_STAIRS = REGISTRY.register("sandstone_of_missing_stairs", () -> new SandstoneOfMissingStairsBlock());
	public static final RegistryObject<Block> SANDSTONE_OF_MISSING_SLAB = REGISTRY.register("sandstone_of_missing_slab", () -> new SandstoneOfMissingSlabBlock());
	public static final RegistryObject<Block> SANDSTONE_OF_MISSING_WALL = REGISTRY.register("sandstone_of_missing_wall", () -> new SandstoneOfMissingWallBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING = REGISTRY.register("polished_sandstone_of_missing", () -> new PolishedSandstoneOfMissingBlock());
	public static final RegistryObject<Block> CHISELED_POLISHED_SANDSTONE_OF_MISSING_1 = REGISTRY.register("chiseled_polished_sandstone_of_missing_1", () -> new ChiseledPolishedSandstoneOfMissing1Block());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING_STAIRS = REGISTRY.register("polished_sandstone_of_missing_stairs", () -> new PolishedSandstoneOfMissingStairsBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING_SLAB = REGISTRY.register("polished_sandstone_of_missing_slab", () -> new PolishedSandstoneOfMissingSlabBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING_WALL = REGISTRY.register("polished_sandstone_of_missing_wall", () -> new PolishedSandstoneOfMissingWallBlock());
	public static final RegistryObject<Block> CHISELED_POLISHED_SANDSTONE_OF_MISSING_2 = REGISTRY.register("chiseled_polished_sandstone_of_missing_2", () -> new ChiseledPolishedSandstoneOfMissing2Block());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING_STAIRS_1 = REGISTRY.register("polished_sandstone_of_missing_stairs_1", () -> new PolishedSandstoneOfMissingStairs1Block());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_OF_MISSING_SLAB_1 = REGISTRY.register("polished_sandstone_of_missing_slab_1", () -> new PolishedSandstoneOfMissingSlab1Block());
	public static final RegistryObject<Block> CHISELED_POLISHED_SANDSTONE_OF_MISSING = REGISTRY.register("chiseled_polished_sandstone_of_missing", () -> new ChiseledPolishedSandstoneOfMissingBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_BRICKS_OF_MISSING = REGISTRY.register("polished_sandstone_bricks_of_missing", () -> new PolishedSandstoneBricksOfMissingBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_BRICKS_OF_MISSING_PILLAR = REGISTRY.register("polished_sandstone_bricks_of_missing_pillar", () -> new PolishedSandstoneBricksOfMissingPillarBlock());
	public static final RegistryObject<Block> BUSHED_POLISHED_SANDSTONE_BRICKS_OF_MISSING = REGISTRY.register("bushed_polished_sandstone_bricks_of_missing", () -> new BushedPolishedSandstoneBricksOfMissingBlock());
	public static final RegistryObject<Block> CRACKED_SANDSTONE_BRICKS_OF_MISSING = REGISTRY.register("cracked_sandstone_bricks_of_missing", () -> new CrackedSandstoneBricksOfMissingBlock());
	public static final RegistryObject<Block> CHISELED_POLISHED_SANDSTONE_BRICKS_OF_MISSING = REGISTRY.register("chiseled_polished_sandstone_bricks_of_missing", () -> new ChiseledPolishedSandstoneBricksOfMissingBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_BRICKS_OF_MISSING_STAIRS = REGISTRY.register("polished_sandstone_bricks_of_missing_stairs", () -> new PolishedSandstoneBricksOfMissingStairsBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_BRICKS_OF_MISSING_SLAB = REGISTRY.register("polished_sandstone_bricks_of_missing_slab", () -> new PolishedSandstoneBricksOfMissingSlabBlock());
	public static final RegistryObject<Block> POLISHED_SANDSTONE_BRICKS_OF_MISSING_WALL = REGISTRY.register("polished_sandstone_bricks_of_missing_wall", () -> new PolishedSandstoneBricksOfMissingWallBlock());
	public static final RegistryObject<Block> TRAP_SAND_OF_MISSING = REGISTRY.register("trap_sand_of_missing", () -> new TrapSandOfMissingBlock());
	public static final RegistryObject<Block> UNCLEAR_SAND_OF_MISSING = REGISTRY.register("unclear_sand_of_missing", () -> new UnclearSandOfMissingBlock());
	public static final RegistryObject<Block> DRIED_SWAMP_BUSH = REGISTRY.register("dried_swamp_bush", () -> new DriedSwampBushBlock());
	public static final RegistryObject<Block> DEAD_BUSH_SWAMP = REGISTRY.register("dead_bush_swamp", () -> new DeadBushSwampBlock());
	public static final RegistryObject<Block> SWAMP_DEAD_GRASS = REGISTRY.register("swamp_dead_grass", () -> new SwampDeadGrassBlock());
	public static final RegistryObject<Block> WASTER_FLOWER = REGISTRY.register("waster_flower", () -> new WasterFlowerBlock());
	public static final RegistryObject<Block> WASTELAND_BUSH = REGISTRY.register("wasteland_bush", () -> new WastelandBushBlock());
	public static final RegistryObject<Block> WASTELAND_SHEAF = REGISTRY.register("wasteland_sheaf", () -> new WastelandSheafBlock());
	public static final RegistryObject<Block> WASTELAND_SHEAF_STAIRS = REGISTRY.register("wasteland_sheaf_stairs", () -> new WastelandSheafStairsBlock());
	public static final RegistryObject<Block> WASTELAND_SHEAF_SLAB = REGISTRY.register("wasteland_sheaf_slab", () -> new WastelandSheafSlabBlock());
	public static final RegistryObject<Block> WASTELAND_SHEAF_FENCE = REGISTRY.register("wasteland_sheaf_fence", () -> new WastelandSheafFenceBlock());
	public static final RegistryObject<Block> DARKNITE = REGISTRY.register("darknite", () -> new DarkniteBlock());
	public static final RegistryObject<Block> DARKNITE_STAIRS = REGISTRY.register("darknite_stairs", () -> new DarkniteStairsBlock());
	public static final RegistryObject<Block> DARKNITE_SLAB = REGISTRY.register("darknite_slab", () -> new DarkniteSlabBlock());
	public static final RegistryObject<Block> DARKNITE_WALL = REGISTRY.register("darknite_wall", () -> new DarkniteWallBlock());
	public static final RegistryObject<Block> COBBLED_DARKNITE = REGISTRY.register("cobbled_darknite", () -> new CobbledDarkniteBlock());
	public static final RegistryObject<Block> COBBLED_DARKNITE_STAIRS = REGISTRY.register("cobbled_darknite_stairs", () -> new CobbledDarkniteStairsBlock());
	public static final RegistryObject<Block> COBBLED_DARKNITE_SLAB = REGISTRY.register("cobbled_darknite_slab", () -> new CobbledDarkniteSlabBlock());
	public static final RegistryObject<Block> COBBLED_DARKNITE_WALL = REGISTRY.register("cobbled_darknite_wall", () -> new CobbledDarkniteWallBlock());
	public static final RegistryObject<Block> DARKNITE_BRICKS = REGISTRY.register("darknite_bricks", () -> new DarkniteBricksBlock());
	public static final RegistryObject<Block> CRACKED_DARKNITE_BRICKS = REGISTRY.register("cracked_darknite_bricks", () -> new CrackedDarkniteBricksBlock());
	public static final RegistryObject<Block> CHISELED_DARKNITE_BRICKS = REGISTRY.register("chiseled_darknite_bricks", () -> new ChiseledDarkniteBricksBlock());
	public static final RegistryObject<Block> DARKNITE_BRICKS_STAIRS = REGISTRY.register("darknite_bricks_stairs", () -> new DarkniteBricksStairsBlock());
	public static final RegistryObject<Block> DARKNITE_BRICKS_SLAB = REGISTRY.register("darknite_bricks_slab", () -> new DarkniteBricksSlabBlock());
	public static final RegistryObject<Block> DARKNITE_BRICKS_WALL = REGISTRY.register("darknite_bricks_wall", () -> new DarkniteBricksWallBlock());
	public static final RegistryObject<Block> GRAMITE_ORE = REGISTRY.register("gramite_ore", () -> new GramiteOreBlock());
	public static final RegistryObject<Block> GLOWNITE_BLOCK = REGISTRY.register("glownite_block", () -> new GlowniteBlockBlock());
	public static final RegistryObject<Block> GLOWNITE_STAIRS = REGISTRY.register("glownite_stairs", () -> new GlowniteStairsBlock());
	public static final RegistryObject<Block> GLOWNITE_SLAB = REGISTRY.register("glownite_slab", () -> new GlowniteSlabBlock());
	public static final RegistryObject<Block> CHISELED_GLOWNITE = REGISTRY.register("chiseled_glownite", () -> new ChiseledGlowniteBlock());
	public static final RegistryObject<Block> CHISELED_GLOWNITE_STAIRS = REGISTRY.register("chiseled_glownite_stairs", () -> new ChiseledGlowniteStairsBlock());
	public static final RegistryObject<Block> CHISELED_GLOWNITE_SLAB = REGISTRY.register("chiseled_glownite_slab", () -> new ChiseledGlowniteSlabBlock());
	public static final RegistryObject<Block> GLOWNITE_DOOR = REGISTRY.register("glownite_door", () -> new GlowniteDoorBlock());
	public static final RegistryObject<Block> GLOWNITE_GRID = REGISTRY.register("glownite_grid", () -> new GlowniteGridBlock());
	public static final RegistryObject<Block> GLOWNITE_GRID_PANE = REGISTRY.register("glownite_grid_pane", () -> new GlowniteGridPaneBlock());
	public static final RegistryObject<Block> GLOWNITE_TRAP_DOOR = REGISTRY.register("glownite_trap_door", () -> new GlowniteTrapDoorBlock());
	public static final RegistryObject<Block> GLOWNITE_BRICKS = REGISTRY.register("glownite_bricks", () -> new GlowniteBricksBlock());
	public static final RegistryObject<Block> GLOWNITE_BRICKS_STAIRS = REGISTRY.register("glownite_bricks_stairs", () -> new GlowniteBricksStairsBlock());
	public static final RegistryObject<Block> GLOWNITE_BRICKS_SLAB = REGISTRY.register("glownite_bricks_slab", () -> new GlowniteBricksSlabBlock());
	public static final RegistryObject<Block> BIG_GLOWNITE_BRICKS = REGISTRY.register("big_glownite_bricks", () -> new BigGlowniteBricksBlock());
	public static final RegistryObject<Block> BIG_GLOWNITE_BRICKS_STAIRS = REGISTRY.register("big_glownite_bricks_stairs", () -> new BigGlowniteBricksStairsBlock());
	public static final RegistryObject<Block> BIG_GLOWNITE_BRICKS_SLAB = REGISTRY.register("big_glownite_bricks_slab", () -> new BigGlowniteBricksSlabBlock());
	public static final RegistryObject<Block> PRISMARINE_CORAL_COLOURLESS = REGISTRY.register("prismarine_coral_colourless", () -> new PrismarineCoralColourlessBlock());
	public static final RegistryObject<Block> DEAD_PRISMARINE_CORAL_COLOURLESS = REGISTRY.register("dead_prismarine_coral_colourless", () -> new DeadPrismarineCoralColourlessBlock());
	public static final RegistryObject<Block> PRISMARINUM_CORAL_COLOURLESS = REGISTRY.register("prismarinum_coral_colourless", () -> new PrismarinumCoralColourlessBlock());
	public static final RegistryObject<Block> PRISMARINE_CORAL_FLASHING = REGISTRY.register("prismarine_coral_flashing", () -> new PrismarineCoralFlashingBlock());
	public static final RegistryObject<Block> DEAD_PRISMARINE_CORAL_FLASHING = REGISTRY.register("dead_prismarine_coral_flashing", () -> new DeadPrismarineCoralFlashingBlock());
	public static final RegistryObject<Block> PRISMARINUM_CORAL_FLASHING = REGISTRY.register("prismarinum_coral_flashing", () -> new PrismarinumCoralFlashingBlock());
	public static final RegistryObject<Block> PRISMARINE_CORAL_WAVE = REGISTRY.register("prismarine_coral_wave", () -> new PrismarineCoralWaveBlock());
	public static final RegistryObject<Block> DEAD_PRISMARINE_CORAL_WAVE = REGISTRY.register("dead_prismarine_coral_wave", () -> new DeadPrismarineCoralWaveBlock());
	public static final RegistryObject<Block> PRISMARINUM_CORAL_WAVE = REGISTRY.register("prismarinum_coral_wave", () -> new PrismarinumCoralWaveBlock());
	public static final RegistryObject<Block> PRISMARINE_CORAL_RICH = REGISTRY.register("prismarine_coral_rich", () -> new PrismarineCoralRichBlock());
	public static final RegistryObject<Block> DEAD_PRISMARINE_CORAL_RICH = REGISTRY.register("dead_prismarine_coral_rich", () -> new DeadPrismarineCoralRichBlock());
	public static final RegistryObject<Block> PRISMARINUM_CORAL_RICH = REGISTRY.register("prismarinum_coral_rich", () -> new PrismarinumCoralRichBlock());
	public static final RegistryObject<Block> PRISMARINE_CORAL_DARKNESS = REGISTRY.register("prismarine_coral_darkness", () -> new PrismarineCoralDarknessBlock());
	public static final RegistryObject<Block> DEAD_PRISMARINE_CORAL_DARKNESS = REGISTRY.register("dead_prismarine_coral_darkness", () -> new DeadPrismarineCoralDarknessBlock());
	public static final RegistryObject<Block> PRISMARINUM_CORAL_DARKNESS = REGISTRY.register("prismarinum_coral_darkness", () -> new PrismarinumCoralDarknessBlock());
	public static final RegistryObject<Block> BUBBLE = REGISTRY.register("bubble", () -> new BubbleBlock());
	public static final RegistryObject<Block> CORRUPT = REGISTRY.register("corrupt", () -> new CorruptBlock());
	public static final RegistryObject<Block> CORRUPTED_SCULK = REGISTRY.register("corrupted_sculk", () -> new CorruptedSculkBlock());
	public static final RegistryObject<Block> CORRUPTED_SCULK_CATALYST = REGISTRY.register("corrupted_sculk_catalyst", () -> new CorruptedSkulkCatalystBlock());
	public static final RegistryObject<Block> CORRUPTED_BUBBLE_BLOCK = REGISTRY.register("corrupted_bubble_block", () -> new CorruptedBubbleBlockBlock());
	public static final RegistryObject<Block> CORRUPTED_BUBBLE_EMPTY = REGISTRY.register("corrupted_bubble_empty", () -> new CorruptedBubbleEmptyBlock());
	public static final RegistryObject<Block> CORRUPTED_SLIME = REGISTRY.register("corrupted_slime", () -> new CorruptedSlimeBlock());
	public static final RegistryObject<Block> CORRUPTED_HUMAN_BLOCK = REGISTRY.register("corrupted_human_block", () -> new CorruptedHumanBlockBlock());
	public static final RegistryObject<Block> CORRUPTED_SUNFLOWER = REGISTRY.register("corrupted_sunflower", () -> new CorruptedSunflowerBlock());
	public static final RegistryObject<Block> CORRUPTED_FLOWER = REGISTRY.register("corrupted_flower", () -> new CorruptedFlowerBlock());
	public static final RegistryObject<Block> CORRUPTED_GRASS = REGISTRY.register("corrupted_grass", () -> new CorruptedGrassBlock());
	public static final RegistryObject<Block> CORRUPTED_LEAVES = REGISTRY.register("corrupted_leaves", () -> new CorruptedLeavesBlock());
	public static final RegistryObject<Block> SWAMP_SOIL = REGISTRY.register("swamp_soil", () -> new SwampSoilBlock());
	public static final RegistryObject<Block> MYCELIUM_GRASS = REGISTRY.register("mycelium_grass", () -> new MyceliumGrassBlock());
	public static final RegistryObject<Block> MYCELIUM_ROOTS = REGISTRY.register("mycelium_roots", () -> new MyceliumRootsBlock());
	public static final RegistryObject<Block> LIGHT_MUSHROOMS_ACTIVE = REGISTRY.register("light_mushrooms_active", () -> new LightMushroomsActiveBlock());
	public static final RegistryObject<Block> LIGHT_MUSHROOM_TALL = REGISTRY.register("light_mushroom_tall", () -> new LightMushroomTallBlock());
	public static final RegistryObject<Block> SWAMP_DIRT = REGISTRY.register("swamp_dirt", () -> new SwampDirtBlock());
	public static final RegistryObject<Block> SWAMP_BLACK_SOIL = REGISTRY.register("swamp_black_soil", () -> new SwampBlackSoilBlock());
	public static final RegistryObject<Block> SWAMP_SUNFLOWER = REGISTRY.register("swamp_sunflower", () -> new SwampSunflowerBlock());
	public static final RegistryObject<Block> SWAMP_CATTAIL = REGISTRY.register("swamp_cattail", () -> new SwampCattailBlock());
	public static final RegistryObject<Block> SWAMP_LILY = REGISTRY.register("swamp_lily", () -> new SwampLilyBlock());
	public static final RegistryObject<Block> SWAMP_CHAMOMILE = REGISTRY.register("swamp_chamomile", () -> new SwampChamomileBlock());
	public static final RegistryObject<Block> SWAMP_TALL_GRASS = REGISTRY.register("swamp_tall_grass", () -> new SwampTallGrassBlock());
	public static final RegistryObject<Block> SWAMP_GRASS = REGISTRY.register("swamp_grass", () -> new SwampGrassBlock());
	public static final RegistryObject<Block> SWAMP_BUSH = REGISTRY.register("swamp_bush", () -> new SwampBushBlock());
	public static final RegistryObject<Block> SWAMP_BLACKSOIL_COVER = REGISTRY.register("swamp_blacksoil_cover", () -> new SwampBlacksoilCoverBlock());
	public static final RegistryObject<Block> CRENRIT = REGISTRY.register("crenrit", () -> new CrenritBlock());
	public static final RegistryObject<Block> RENTERIA_SAND = REGISTRY.register("renteria_sand", () -> new RenteriaSandBlock());
	public static final RegistryObject<Block> SUSPICIOUS_RENTERIA_SAND = REGISTRY.register("suspicious_renteria_sand", () -> new SuspiciousRenteriaSandBlock());
	public static final RegistryObject<Block> UNCLEAR_RENTERIA_SAND = REGISTRY.register("unclear_renteria_sand", () -> new UnclearRenteriaSandBlock());
	public static final RegistryObject<Block> ANCIENT_SCULK = REGISTRY.register("ancient_sculk", () -> new AncientSculkBlock());
	public static final RegistryObject<Block> SHADDY_MELON = REGISTRY.register("shaddy_melon", () -> new ShaddyMelonBlock());
	public static final RegistryObject<Block> RECRA_FLOWER = REGISTRY.register("recra_flower", () -> new RecraFlowerBlock());
	public static final RegistryObject<Block> RECRA_FLOWER_2 = REGISTRY.register("recra_flower_2", () -> new RecraFlower2Block());
	public static final RegistryObject<Block> RECRA_FLOWER_1 = REGISTRY.register("recra_flower_1", () -> new RecraFlower1Block());
	public static final RegistryObject<Block> RECRA_GRASS = REGISTRY.register("recra_grass", () -> new RecraGrassBlock());
	public static final RegistryObject<Block> METENITE_GLASS = REGISTRY.register("metenite_glass", () -> new MeteniteGlassBlock());
	public static final RegistryObject<Block> METENITE_GLASS_PANE = REGISTRY.register("metenite_glass_pane", () -> new MeteniteGlassPaneBlock());
	public static final RegistryObject<Block> ERIDIUM_GLASS = REGISTRY.register("eridium_glass", () -> new EridiumGlassBlock());
	public static final RegistryObject<Block> ERIDIUM_GLASS_PANE = REGISTRY.register("eridium_glass_pane", () -> new EridiumGlassPaneBlock());
	public static final RegistryObject<Block> EMPTY_CHISELED_ANCIENT_GLASS = REGISTRY.register("empty_chiseled_ancient_glass", () -> new EmptyChiseledAncientGlassBlock());
	public static final RegistryObject<Block> EMPTY_CHISELED_ANCIENT_GLASS_PANE = REGISTRY.register("empty_chiseled_ancient_glass_pane", () -> new EmptyChiseledAncientGlassPaneBlock());
	public static final RegistryObject<Block> CHISELED_ANCIENT_GLASS = REGISTRY.register("chiseled_ancient_glass", () -> new DarknessGlassBlock());
	public static final RegistryObject<Block> CHISELED_ANCIENT_GLASS_PANE = REGISTRY.register("chiseled_ancient_glass_pane", () -> new DarknessStainedPaneBlock());
	public static final RegistryObject<Block> EMPTY_CHISELED_GLASS = REGISTRY.register("empty_chiseled_glass", () -> new EmptyChiseledGlassBlock());
	public static final RegistryObject<Block> EMPTY_CHISELED_GLASS_PANE = REGISTRY.register("empty_chiseled_glass_pane", () -> new EmptyChiseledGlassPaneBlock());
	public static final RegistryObject<Block> CHISELED_GLASS = REGISTRY.register("chiseled_glass", () -> new ChiseledGlassBlock());
	public static final RegistryObject<Block> CHISELED_GLASS_PANE = REGISTRY.register("chiseled_glass_pane", () -> new ChiseledGlassPaneBlock());
	public static final RegistryObject<Block> CHISELED_GLASS_1 = REGISTRY.register("chiseled_glass_1", () -> new ChiseledGlass1Block());
	public static final RegistryObject<Block> CHISELED_GLASS_PANE_1 = REGISTRY.register("chiseled_glass_pane_1", () -> new ChiseledGlassPane1Block());
	public static final RegistryObject<Block> CHISELED_GLASS_2 = REGISTRY.register("chiseled_glass_2", () -> new ChiseledGlass2Block());
	public static final RegistryObject<Block> CHISELED_GLASS_PANE_2 = REGISTRY.register("chiseled_glass_pane_2", () -> new ChiseledGlassPane2Block());
	public static final RegistryObject<Block> CHISELED_GLASS_3 = REGISTRY.register("chiseled_glass_3", () -> new ChiseledGlass3Block());
	public static final RegistryObject<Block> CHISELED_GLASS_PANE_3 = REGISTRY.register("chiseled_glass_pane_3", () -> new ChiseledGlassPane3Block());
	public static final RegistryObject<Block> CHISELED_GLASS_4 = REGISTRY.register("chiseled_glass_4", () -> new ChiseledGlass4Block());
	public static final RegistryObject<Block> CHISELED_GLASS_PANE_4 = REGISTRY.register("chiseled_glass_pane_4", () -> new ChiseledGlassPane4Block());
	public static final RegistryObject<Block> SOULSTEAL_GRID = REGISTRY.register("soulsteal_grid", () -> new SoulstealGridBlock());
	public static final RegistryObject<Block> LIGHT_OF_SOUL = REGISTRY.register("light_of_soul", () -> new LightOfSoulBlock());
	public static final RegistryObject<Block> GLOWNITE_GRID_LANTERN = REGISTRY.register("glownite_grid_lantern", () -> new GlowniteGridLanternBlock());
	public static final RegistryObject<Block> BLACKSMITE_FORGE = REGISTRY.register("blacksmite_forge", () -> new BlacksmiteForgeBlock());
	public static final RegistryObject<Block> SAMOVAR = REGISTRY.register("samovar", () -> new SamovarBlock());
	public static final RegistryObject<Block> KETTLE = REGISTRY.register("kettle", () -> new KettleBlock());
	public static final RegistryObject<Block> COPPER_KETTLE = REGISTRY.register("copper_kettle", () -> new CopperKettleBlock());
	public static final RegistryObject<Block> WOODEN_MUG = REGISTRY.register("wooden_mug", () -> new WoodenMugBlock());
	public static final RegistryObject<Block> MINERS_POT = REGISTRY.register("miners_pot", () -> new MinersPotBlock());
	public static final RegistryObject<Block> BIG_BOOK = REGISTRY.register("big_book", () -> new BigBookBlock());
	public static final RegistryObject<Block> INKS = REGISTRY.register("inks", () -> new InksBlock());
	public static final RegistryObject<Block> TABLECLOTH = REGISTRY.register("tablecloth", () -> new TableclothBlock());
	public static final RegistryObject<Block> BAG = REGISTRY.register("bag", () -> new BagBlock());
	public static final RegistryObject<Block> GLASS_JAR = REGISTRY.register("glass_jar", () -> new GlassJarBlock());
	public static final RegistryObject<Block> PROECTOR = REGISTRY.register("proector", () -> new ProectorBlock());
	public static final RegistryObject<Block> SOULSTEAL_ANCHOR = REGISTRY.register("soulsteal_anchor", () -> new SoulAnchorBlock());
	public static final RegistryObject<Block> EMPTY_FIREFLIES_OAK_LOG = REGISTRY.register("empty_fireflies_oak_log", () -> new EmptyFirefliesOakLogBlock());
	public static final RegistryObject<Block> FIREFLIES_OAK_LOG = REGISTRY.register("fireflies_oak_log", () -> new FirefliesOakLogBlock());
	public static final RegistryObject<Block> FIREFLIES_FLOWER = REGISTRY.register("fireflies_flower", () -> new FirefliesFlowerBlock());
	public static final RegistryObject<Block> LAVENDER = REGISTRY.register("lavender", () -> new LavenderBlock());
	public static final RegistryObject<Block> TALL_LAVENDER = REGISTRY.register("tall_lavender", () -> new TallLavenderBlock());
	public static final RegistryObject<Block> GRAPE_AZALEA_LEAVES = REGISTRY.register("grape_azalea_leaves", () -> new GrapeAzaleaLeavesBlock());
	public static final RegistryObject<Block> BUSHY_GRAPE_AZALEA_LEAVES = REGISTRY.register("bushy_grape_azalea_leaves", () -> new BushyGrapeAzaleaLeavesBlock());
	public static final RegistryObject<Block> RUNED_SWAMP_STONE = REGISTRY.register("runed_swamp_stone", () -> new RunedSwampStoneBlock());
	public static final RegistryObject<Block> CORRUPTED_RUNE = REGISTRY.register("corrupted_rune", () -> new CorruptedRuneBlock());
	public static final RegistryObject<Block> METENITE_CLUSTER = REGISTRY.register("metenite_cluster", () -> new MeteniteClusterBlock());
	public static final RegistryObject<Block> ERIDIUM_CLUSTER = REGISTRY.register("eridium_cluster", () -> new EridiumClasterBlock());
	public static final RegistryObject<Block> CVETALIY_CLUSTER = REGISTRY.register("cvetaliy_cluster", () -> new CvetaliyClusterBlock());
	public static final RegistryObject<Block> METENITE = REGISTRY.register("metenite", () -> new MeteniteBlock());
	public static final RegistryObject<Block> ERIDIUM = REGISTRY.register("eridium", () -> new EridiumBlock());
	public static final RegistryObject<Block> CVETALIY_BLOCK = REGISTRY.register("cvetaliy_block", () -> new CvetaliyBlockBlock());
	public static final RegistryObject<Block> DARK_CRYSTAL_CLUSTER_BLOCK = REGISTRY.register("dark_crystal_cluster_block", () -> new DarkCrystalBlockBlock());
	public static final RegistryObject<Block> GRAMITE_BLOCK = REGISTRY.register("gramite_block", () -> new GramiteBlockBlock());
	public static final RegistryObject<Block> FIRENITE_BLOCK = REGISTRY.register("firenite_block", () -> new FireniteBlockBlock());
	public static final RegistryObject<Block> SOULSTEAL_BLOCK = REGISTRY.register("soulsteal_block", () -> new SoulstealBlockBlock());
	public static final RegistryObject<Block> TRUDNITE_BLOCK = REGISTRY.register("trudnite_block", () -> new TrudniteBlockBlock());
	public static final RegistryObject<Block> CRY_BLOCK = REGISTRY.register("cry_block", () -> new CryBlockBlock());
	public static final RegistryObject<Block> METENITE_BLOCK = REGISTRY.register("metenite_block", () -> new MeteniteBlockBlock());
	public static final RegistryObject<Block> ERIDIUM_BLOCK = REGISTRY.register("eridium_block", () -> new EridiumBlockBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_CHEST = REGISTRY.register("darkness_spruce_chest", () -> new DarknessSpruceChestBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_FENCE_GATE = REGISTRY.register("darkness_spruce_fence_gate", () -> new DarknessSpruceFenceGateBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_DOOR = REGISTRY.register("darkness_spruce_door", () -> new DarknessSpruceDoorBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_TRAP_DOOR = REGISTRY.register("darkness_spruce_trap_door", () -> new DarknessSpruceTrapDoorBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_PRESSURE_PLATE = REGISTRY.register("darkness_spruce_pressure_plate", () -> new DarknessSprucePressurePlateBlock());
	public static final RegistryObject<Block> DARKNESS_SPRUCE_BUTTON = REGISTRY.register("darkness_spruce_button", () -> new DarknessSpruceButtonBlock());
	public static final RegistryObject<Block> CYAN_FENCE_GATE = REGISTRY.register("cyan_fence_gate", () -> new CyanFenceGateBlock());
	public static final RegistryObject<Block> CYAN_DOOR = REGISTRY.register("cyan_door", () -> new CyanDoorBlock());
	public static final RegistryObject<Block> CYAN_TRAP_DOOR = REGISTRY.register("cyan_trap_door", () -> new CyanTrapDoorBlock());
	public static final RegistryObject<Block> CYAN_PRESSURE_PLATE = REGISTRY.register("cyan_pressure_plate", () -> new CyanPressurePlateBlock());
	public static final RegistryObject<Block> CYAN_BUTTON = REGISTRY.register("cyan_button", () -> new CyanButtonBlock());
	public static final RegistryObject<Block> MYCELIUM_FENCE_GATE = REGISTRY.register("mycelium_fence_gate", () -> new MyceliumFenceGateBlock());
	public static final RegistryObject<Block> MYCELIUM_DOOR = REGISTRY.register("mycelium_door", () -> new MyceliumDoorBlock());
	public static final RegistryObject<Block> MYCELIUM_TRAP_DOOR = REGISTRY.register("mycelium_trap_door", () -> new MyceliumTrapDoorBlock());
	public static final RegistryObject<Block> MYCELIUM_PRESSURE_PLATE = REGISTRY.register("mycelium_pressure_plate", () -> new MyceliumPressurePlateBlock());
	public static final RegistryObject<Block> MYCELIUM_BUTTON = REGISTRY.register("mycelium_button", () -> new MyceliumButtonBlock());
	public static final RegistryObject<Block> GLOW_FENCE_GATE = REGISTRY.register("glow_fence_gate", () -> new GlowFenceGateBlock());
	public static final RegistryObject<Block> GLOW_DOOR = REGISTRY.register("glow_door", () -> new GlowDoorBlock());
	public static final RegistryObject<Block> GLOW_TRAP_DOOR = REGISTRY.register("glow_trap_door", () -> new GlowTrapDoorBlock());
	public static final RegistryObject<Block> GLOW_PRESSURE_PLATE = REGISTRY.register("glow_pressure_plate", () -> new GlowPressurePlateBlock());
	public static final RegistryObject<Block> GLOW_BUTTON = REGISTRY.register("glow_button", () -> new GlowButtonBlock());
	public static final RegistryObject<Block> CRYING_FENCE_GATE = REGISTRY.register("crying_fence_gate", () -> new CryingFenceGateBlock());
	public static final RegistryObject<Block> CRYING_DOOR = REGISTRY.register("crying_door", () -> new CryingDoorBlock());
	public static final RegistryObject<Block> CRYING_TRAP_DOOR = REGISTRY.register("crying_trap_door", () -> new CryingTrapDoorBlock());
	public static final RegistryObject<Block> CRYING_PRESSURE_PLATE = REGISTRY.register("crying_pressure_plate", () -> new CryingPressurePlateBlock());
	public static final RegistryObject<Block> CRYING_BUTTON = REGISTRY.register("crying_button", () -> new CryingButtonBlock());
	public static final RegistryObject<Block> FAKE_FENCE_GATE = REGISTRY.register("fake_fence_gate", () -> new FakeFenceGateBlock());
	public static final RegistryObject<Block> FAKE_DOOR = REGISTRY.register("fake_door", () -> new FakeDoorBlock());
	public static final RegistryObject<Block> FAKE_TRAP_DOOR = REGISTRY.register("fake_trap_door", () -> new FakeTrapDoorBlock());
	public static final RegistryObject<Block> FAKE_PRESSURE_PLATE = REGISTRY.register("fake_pressure_plate", () -> new FakePressurePlateBlock());
	public static final RegistryObject<Block> FAKE_BUTTON = REGISTRY.register("fake_button", () -> new FakeButtonBlock());
	public static final RegistryObject<Block> DRIED_FENCE_GATE = REGISTRY.register("dried_fence_gate", () -> new DriedFenceGateBlock());
	public static final RegistryObject<Block> DRIED_PRESSURE_PLATE = REGISTRY.register("dried_pressure_plate", () -> new DriedPressurePlateBlock());
	public static final RegistryObject<Block> DRIED_BUTTON = REGISTRY.register("dried_button", () -> new DriedButtonBlock());
	public static final RegistryObject<Block> SCULK_GRAIL = REGISTRY.register("sculk_grail", () -> new SculkGrailBlock());
	public static final RegistryObject<Block> SOUL_MASTER = REGISTRY.register("soul_master", () -> new SoulMasterBlock());
	public static final RegistryObject<Block> LIGHTED_VINE = REGISTRY.register("lighted_vine", () -> new LightedVineBlock());
	public static final RegistryObject<Block> LIGHTED_VINE_ACTIVE = REGISTRY.register("lighted_vine_active", () -> new LightedVineActiveBlock());
	public static final RegistryObject<Block> GLOW_FUNGUS_0 = REGISTRY.register("glow_fungus_0", () -> new LightShroomBlock());
	public static final RegistryObject<Block> GLOW_FUNGUS_1 = REGISTRY.register("glow_fungus_1", () -> new LightedShroom1Block());
	public static final RegistryObject<Block> GLOW_FUNGUS_2 = REGISTRY.register("glow_fungus_2", () -> new LightShroom2Block());
	public static final RegistryObject<Block> LIGHT_SHROOM_3 = REGISTRY.register("light_shroom_3", () -> new LightShroom3Block());
	public static final RegistryObject<Block> FIREFLIES_LIGHT = REGISTRY.register("fireflies_light", () -> new FirefliesLightBlock());
	public static final RegistryObject<Block> LIGHTED_VINE_2 = REGISTRY.register("lighted_vine_2", () -> new LightedVine2Block());
	public static final RegistryObject<Block> LIGHT_MUSHROOMS_DISABLE = REGISTRY.register("light_mushrooms_disable", () -> new LightMushroomsDisableBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING = REGISTRY.register("block_of_writing", () -> new BlockOfWritingBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_MINUS = REGISTRY.register("block_of_writing_minus", () -> new BlockOfWritingMinusBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_PLUS = REGISTRY.register("block_of_writing_plus", () -> new BlockOfWritingPlusBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_LAVENDER_PETAL = REGISTRY.register("block_of_writing_lavender_petal", () -> new BlockOfWritingLavenderPetalBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_COCOA = REGISTRY.register("block_of_writing_cocoa", () -> new BlockOfWritingCocoaBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_GLOW_BERRY_JAM = REGISTRY.register("block_of_writing_glow_berry_jam", () -> new BlockOfWritingGlowBerryJamBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_BAG = REGISTRY.register("block_of_writing_bag", () -> new BlockOfWritingBagBlock());
	public static final RegistryObject<Block> BLOCK_OF_WRITING_EQUALS = REGISTRY.register("block_of_writing_equals", () -> new BlockOfWritingEqualsBlock());
	public static final RegistryObject<Block> SWAMP_SAND_LAYER = REGISTRY.register("swamp_sand_layer", () -> new SwampSandLayerBlock());
	public static final RegistryObject<Block> SAND_OF_MISSING_LAYER = REGISTRY.register("sand_of_missing_layer", () -> new SandOfMissingLayerBlock());
	public static final RegistryObject<Block> SWAMP_KELP = REGISTRY.register("swamp_kelp", () -> new SwampKelpBlock());
	public static final RegistryObject<Block> SWAMP_KELP_TOP = REGISTRY.register("swamp_kelp_top", () -> new SwampKelpTopBlock());
	public static final RegistryObject<Block> SWAMP_SEAWEED = REGISTRY.register("swamp_seaweed", () -> new SwampSeaweedBlock());
	public static final RegistryObject<Block> CLAY_JUG = REGISTRY.register("clay_jug", () -> new ClayJugBlock());
	public static final RegistryObject<Block> CLAY_JUG_2 = REGISTRY.register("clay_jug_2", () -> new ClayJug2Block());
	public static final RegistryObject<Block> CLAY_JUG_3 = REGISTRY.register("clay_jug_3", () -> new ClayJug3Block());
	public static final RegistryObject<Block> CLAY_JUG_4 = REGISTRY.register("clay_jug_4", () -> new ClayJug4Block());
	public static final RegistryObject<Block> CLAY_JUG_5 = REGISTRY.register("clay_jug_5", () -> new ClayJug5Block());
	public static final RegistryObject<Block> LAVENDER_AZALEA_LEAVES = REGISTRY.register("lavender_azalea_leaves", () -> new LavenderAzaleaLeavesBlock());
	public static final RegistryObject<Block> SAMOVAR_ACTIVE = REGISTRY.register("samovar_active", () -> new SamovarActiveBlock());
	public static final RegistryObject<Block> KETTLE_FOR_SAMOVER = REGISTRY.register("kettle_for_samover", () -> new KettleForSamoverBlock());
	public static final RegistryObject<Block> COPPER_KETTLE_FOR_SAMOVAR = REGISTRY.register("copper_kettle_for_samovar", () -> new CopperKettleForSamovarBlock());
	public static final RegistryObject<Block> LIGHT_MUSHROOM_TOP = REGISTRY.register("light_mushroom_top", () -> new LightMushroomTopBlock());
	public static final RegistryObject<Block> LIGHT_MUSHROOM_TOP_1 = REGISTRY.register("light_mushroom_top_1", () -> new LightMushroomTop1Block());
	public static final RegistryObject<Block> CORRUPT_RUNE = REGISTRY.register("corrupt_rune", () -> new CorruptRuneBlock());
	public static final RegistryObject<Block> CORRUPT_RUNE_1 = REGISTRY.register("corrupt_rune_1", () -> new CorruptRune1Block());
	public static final RegistryObject<Block> CORRUPT_RUNE_2 = REGISTRY.register("corrupt_rune_2", () -> new CorruptRune2Block());
	public static final RegistryObject<Block> CORRUPTED_SCULK_CATALYST_SPAWN = REGISTRY.register("corrupted_sculk_catalyst_spawn", () -> new CorruptedSculkCatalystBlock());
	public static final RegistryObject<Block> SWAMP_SAND_LAYER_1 = REGISTRY.register("swamp_sand_layer_1", () -> new SwampSandLayer1Block());
	public static final RegistryObject<Block> SWAMP_SAND_LAYER_2 = REGISTRY.register("swamp_sand_layer_2", () -> new SwampSandLayer2Block());
	public static final RegistryObject<Block> SAND_OF_MISSING_LAYER_1 = REGISTRY.register("sand_of_missing_layer_1", () -> new SandOfMissingLayer1Block());
	public static final RegistryObject<Block> SAND_OF_MISSING_LAYER_2 = REGISTRY.register("sand_of_missing_layer_2", () -> new SandOfMissingLayer2Block());
	public static final RegistryObject<Block> CORRUPTED_BUBBLE = REGISTRY.register("corrupted_bubble", () -> new CorruptedBubbleBlock());
	public static final RegistryObject<Block> SPORE_VINE_BLOCK = REGISTRY.register("spore_vine_block", () -> new SporeVineBlock());
	public static final RegistryObject<Block> SPORE_VINE_0 = REGISTRY.register("spore_vine_0", () -> new SporeVine0Block());
	public static final RegistryObject<Block> SPORE_VINE_1 = REGISTRY.register("spore_vine_1", () -> new SporeVine1Block());
	public static final RegistryObject<Block> SPORE_VINE_2 = REGISTRY.register("spore_vine_2", () -> new SporeVine2Block());
	public static final RegistryObject<Block> GLOW_FUNGUS_HAT_0 = REGISTRY.register("glow_fungus_hat_0", () -> new GlowFungusHatBlock());
	public static final RegistryObject<Block> CORRUPT_1 = REGISTRY.register("corrupt_1", () -> new Corrupt1Block());
	public static final RegistryObject<Block> CORRUPT_0 = REGISTRY.register("corrupt_0", () -> new Corrupt0Block());
	public static final RegistryObject<Block> CORRUPTED_ROOTS = REGISTRY.register("corrupted_roots", () -> new CorruptedRootsBlock());
}
